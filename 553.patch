From 1becd2532c21a1053afa67055f56b1ab5cd31fdb Mon Sep 17 00:00:00 2001
From: Ben Dudson <bd512@york.ac.uk>
Date: Wed, 3 May 2017 17:36:26 +0100
Subject: [PATCH] Making ExpressionParser::LexInfo chars signed

Negative values are used to indicate particular tokens
(integers and strings). GCC uses signed chars by default,
but this is implementation-specific.
---
 include/bout/sys/expressionparser.hxx | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/include/bout/sys/expressionparser.hxx b/include/bout/sys/expressionparser.hxx
index 340fc99..f16fd0c 100644
--- a/include/bout/sys/expressionparser.hxx
+++ b/include/bout/sys/expressionparser.hxx
@@ -124,10 +124,10 @@ private:
     
     LexInfo(std::string input);
     
-    char curtok;  ///< Current token. -1 for number, -2 for string, 0 for "end of input"
+    signed char curtok;  ///< Current token. -1 for number, -2 for string, 0 for "end of input"
     double curval; ///< Value if a number
     std::string curident; ///< Identifier, variable or function name
-    char LastChar;   ///< The last character read from the string
+    signed char LastChar;   ///< The last character read from the string
     std::stringstream ss; ///< Used to read values from the input string
     char nextToken(); ///< Get the next token in the string
     
