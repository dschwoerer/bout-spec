diff --git a/src/solver/impls/petsc/petsc.cxx b/src/solver/impls/petsc/petsc.cxx
index b81f290..f046852 100644
--- a/src/solver/impls/petsc/petsc.cxx
+++ b/src/solver/impls/petsc/petsc.cxx
@@ -233,12 +233,20 @@ int PetscSolver::init(bool restarting, int NOUT, BoutReal TIMESTEP) {
   ierr = TSGetSNES(ts,&snes);CHKERRQ(ierr);
   ierr = TSSetExactFinalTime(ts,TS_EXACTFINALTIME_INTERPOLATE);CHKERRQ(ierr);
 
+#if PETSC_VERSION_GE(3,7,0)
+  ierr = PetscOptionsGetBool(PETSC_NULL, PETSC_NULL,"-interpolate",&interpolate,PETSC_NULL);CHKERRQ(ierr);
+#else
   ierr = PetscOptionsGetBool(PETSC_NULL,"-interpolate",&interpolate,PETSC_NULL);CHKERRQ(ierr);
+#endif
 
   // Check for -output_name to see if user specified a "performance"
   // run, if they didn't then use the standard monitor function. TODO:
   // use PetscFList
+#if PETSC_VERSION_GE(3,7,0)
+  ierr = PetscOptionsGetString(PETSC_NULL, PETSC_NULL,"-output_name",this->output_name, sizeof this->output_name,&output_flag);CHKERRQ(ierr);
+#else
   ierr = PetscOptionsGetString(PETSC_NULL,"-output_name",this->output_name, sizeof this->output_name,&output_flag);CHKERRQ(ierr);
+#endif
 
   // If the output_name is not specified then use the standard monitor function
   if(output_flag) {
@@ -323,7 +331,11 @@ int PetscSolver::init(bool restarting, int NOUT, BoutReal TIMESTEP) {
 
   // Create Jacobian matrix to be used by preconditioner
   ierr = PetscPrintf(PETSC_COMM_WORLD," Get Jacobian matrix at simtime %g\n",simtime);CHKERRQ(ierr);
+#if PETSC_VERSION_GE(3,7,0)
+  ierr = PetscOptionsGetString(PETSC_NULL, PETSC_NULL,"-J_load",load_file,PETSC_MAX_PATH_LEN-1,&J_load);CHKERRQ(ierr);
+#else 
   ierr = PetscOptionsGetString(PETSC_NULL,"-J_load",load_file,PETSC_MAX_PATH_LEN-1,&J_load);CHKERRQ(ierr);
+#endif
   if(J_load) {
     PetscViewer     fd;
     ierr = PetscPrintf(PETSC_COMM_WORLD," Load Jmat ...local_N %d, neq %d\n",local_N,neq);CHKERRQ(ierr);
@@ -370,8 +382,11 @@ int PetscSolver::init(bool restarting, int NOUT, BoutReal TIMESTEP) {
     prealloc = cols; // why nonzeros=295900, allocated nonzeros=2816000/12800000 (*dof*dof), number of mallocs used during MatSetValues calls =256?
     ierr = MatSeqBAIJSetPreallocation(J,dof,prealloc,PETSC_NULL);CHKERRQ(ierr);
     ierr = MatMPIBAIJSetPreallocation(J,dof,prealloc,PETSC_NULL,prealloc,PETSC_NULL);CHKERRQ(ierr);
-
+#if PETSC_VERSION_GE(3,7,0)
+    ierr = PetscOptionsHasName(PETSC_NULL, PETSC_NULL,"-J_slowfd",&J_slowfd);CHKERRQ(ierr);
+#else
     ierr = PetscOptionsHasName(PETSC_NULL,"-J_slowfd",&J_slowfd);CHKERRQ(ierr);
+#endif
     if (J_slowfd) { // create Jacobian matrix by slow fd
       MatStructure flg;
 
@@ -558,7 +573,11 @@ int PetscSolver::init(bool restarting, int NOUT, BoutReal TIMESTEP) {
   ierr = SNESSetJacobian(snes,J,J,SNESComputeJacobianDefaultColor,matfdcoloring);CHKERRQ(ierr);
 
   // Write J in binary for study - see ~petsc/src/mat/examples/tests/ex124.c
+#if PETSC_VERSION_GE(3,7,0)
+  ierr = PetscOptionsHasName(PETSC_NULL, PETSC_NULL,"-J_write",&J_write);CHKERRQ(ierr);
+#else
   ierr = PetscOptionsHasName(PETSC_NULL,"-J_write",&J_write);CHKERRQ(ierr);
+#endif
   if (J_write){
     PetscViewer    viewer;
     ierr = PetscPrintf(PETSC_COMM_WORLD,"\n[%d] Test TSComputeRHSJacobian() ...\n",rank);
