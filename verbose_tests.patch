diff --git a/examples/drift-instability/runtest b/examples/drift-instability/runtest
index 01f8b18..572833b 100755
--- a/examples/drift-instability/runtest
+++ b/examples/drift-instability/runtest
@@ -17,7 +17,7 @@ try:
   from past.utils import old_div
 except:
   def old_div(a,b):
-    return a / b
+    return int(a / b)
 
 from math import isnan
 
diff --git a/examples/test-initial/runtest b/examples/test-initial/runtest
index 517dd94..4cc5f37 100755
--- a/examples/test-initial/runtest
+++ b/examples/test-initial/runtest
@@ -19,7 +19,12 @@ def bout_round(x):
     """
     BOUT++ rounding
     """
-    return x + 0.5 if x > 0.0 else x - 0.5
+    for f in (x,.5):
+        finfo = np.finfo(f)
+        print( finfo.dtype, finfo.nexp, finfo.nmant)
+    ret=x + 0.5 if x > 0.0 else x - 0.5
+    print("%.20f"%(ret-int(ret)))
+    return ret
 
 
 def genRand(seed):
diff --git a/include/bout/sys/expressionparser.hxx b/include/bout/sys/expressionparser.hxx
index 340fc99..7796ae0 100644
--- a/include/bout/sys/expressionparser.hxx
+++ b/include/bout/sys/expressionparser.hxx
@@ -124,12 +124,12 @@ private:
     
     LexInfo(std::string input);
     
-    char curtok;  ///< Current token. -1 for number, -2 for string, 0 for "end of input"
+    signed char curtok;  ///< Current token. -1 for number, -2 for string, 0 for "end of input"
     double curval; ///< Value if a number
     std::string curident; ///< Identifier, variable or function name
     char LastChar;   ///< The last character read from the string
     std::stringstream ss; ///< Used to read values from the input string
-    char nextToken(); ///< Get the next token in the string
+    signed char nextToken(); ///< Get the next token in the string
     
     int getPos(); ///< Return position in the input
   };
